apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "statuspage-chart.fullname" . }}
  labels:
    {{- include "statuspage-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "statuspage-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "statuspage-chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "statuspage-chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: ALLOWED_HOSTS
              value: "{{ .Values.django.allowedHosts }}"
            - name: DEBUG
              value: "{{ .Values.django.debug }}"
            - name: DATABASE_HOST
              value: "{{ .Values.django.database.host }}"
            - name: DATABASE_NAME
              value: "{{ .Values.django.database.name }}"
            - name: DATABASE_PORT
              value: "{{ .Values.django.database.port }}"
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: password
            - name: REDIS_HOST
              value: "{{ .Values.django.redis.host }}"
            - name: REDIS_PORT
              value: "{{ .Values.django.redis.port }}"
            - name: REDIS_DB
              value: "{{ .Values.django.redis.database }}"
            - name: SITE_URL
              value: "{{ .Values.siteUrl | default "http://localhost:8000" }}"
            - name: SECRET_KEY
              value: "{{ .Values.django.secretKey | default "change-me-in-production" }}"
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "db-secrets"
